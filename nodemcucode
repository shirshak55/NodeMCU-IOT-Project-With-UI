#include <ESP8266WiFi.h>
#ifndef UNIT_TEST
#include <Arduino.h>
#endif
#include <IRremoteESP8266.h>
#include <IRrecv.h>
#include <IRutils.h>
int value;
int value1;
int value2;
int value3;
const char* ssid = "Shirshak";
const char* password = "shirshak";
 
int ledPin = 15; // GPIO13---D7 of NodeMCU
int ledPin1 = 13;
int ledPin2 = 12;
int ledPin3 = 14;
WiFiServer server(80);

uint16_t RECV_PIN = 5;

IRrecv irrecv(RECV_PIN);

decode_results results;

int Mode;
void setup() {
  Mode = 1;
  Serial.begin(115200);
  delay(10);
 
  pinMode(ledPin, OUTPUT);
  pinMode(ledPin1, OUTPUT);
  pinMode(ledPin2, OUTPUT);
  pinMode(ledPin3, OUTPUT);
 
 
  // Connect to WiFi network
  Serial.println();
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);
 
  WiFi.begin(ssid,password);
 
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected");
 
  // Start the server
  server.begin();
  Serial.println("Server started");
 
  // Print the IP address
  Serial.print("Use this URL to connect: ");
  Serial.print("http://");
  Serial.print(WiFi.localIP());
  Serial.println("/");
    irrecv.enableIRIn();  // Start the receiver
  while (!Serial)  // Wait for the serial connection to be establised.
    delay(50);
  Serial.println();
  Serial.print("IRrecvDemo is now running and waiting for IR message on Pin ");
  Serial.println(RECV_PIN);
 
}
 
void loop() {
  if (irrecv.decode(&results)) {
    // print() & println() can't handle printing long longs. (uint64_t)
    serialPrintUint64(results.value, DEC);
    Serial.println("");
    irrecv.resume();  // Receive the next value
  }

  if(results.value == 70385940859017) 
  {
    Mode = 1;
    }
if(results.value ==70385940830233 ) 
  {
    Mode = 0;
    }


  // Match the request
 if(Mode == 1){

   // Check if a client has connected
  WiFiClient client = server.available();
  if (!client) {
    return;
  }
 
  // Wait until the client sends some data
  Serial.println("new client");
  while(!client.available()){
    delay(1);
  }
 
  // Read the first line of the request
  String request = client.readStringUntil('\r');
  Serial.println(request);
  client.flush();

  if (request.indexOf("/LED=ON") != -1)  {
    digitalWrite(ledPin, HIGH);
    value = 1;
  }
  if (request.indexOf("/LED=OFF") != -1)  {
    digitalWrite(ledPin, LOW);
    value = 0;
  }
 
// Set ledPin according to the request
//digitalWrite(ledPin, value);
 
  // Return the response
  client.println("HTTP/1.1 200 OK");
  client.println("Content-Type: text/html");
  client.println(""); //  do not forget this one
  client.println("<!DOCTYPE HTML>");
  client.println("<html>");
 
  client.print("Led is now: ");
 
  if(value == 1) {
    client.print("On");
  } else {
    client.print("Off");
  }
  client.println("<br><br>");
  client.println("<a href=\"/LED=ON\"\"><button>On </button></a>");
  client.println("<a href=\"/LED=OFF\"\"><button>Off </button></a><br />");  
  
 
  
  if (request.indexOf("/LED1=ON") != -1)  {
    digitalWrite(ledPin1, HIGH);
    value1 = 1;
  }
  if (request.indexOf("/LED1=OFF") != -1)  {
    digitalWrite(ledPin1, LOW);
    value1 = 0;
  }
 
// Set ledPin according to the request
//digitalWrite(ledPin, value);
 
  
  client.print("Led is now: ");
 
  if(value1 == 1) {
    client.print("On");
  } else {
    client.print("Off");
  }
  client.println("<br><br>");
  client.println("<a href=\"/LED1=ON\"\"><button>On </button></a>");
  client.println("<a href=\"/LED1=OFF\"\"><button>Off </button></a><br />");  
 

if (request.indexOf("/LED2=ON") != -1)  {
    digitalWrite(ledPin2, HIGH);
    value2 = 1;
  }
  if (request.indexOf("/LED2=OFF") != -1)  {
    digitalWrite(ledPin2, LOW);
    value2 = 0;
  }
 
// Set ledPin according to the request
//digitalWrite(ledPin, value);
 
  
  client.print("Led is now: ");
 
  if(value2 == 1) {
    client.print("On");
  } else {
    client.print("Off");
  }
  client.println("<br><br>");
  client.println("<a href=\"/LED2=ON\"\"><button>On </button> button</a>");
  client.println("<a href=\"/LED2=OFF\"\"><button>Off </button></a><br />"); 
   
   if (request.indexOf("/LED3=ON") != -1)  {
    digitalWrite(ledPin3, HIGH);
    value3 = 1;
  }
  if (request.indexOf("/LED3=OFF") != -1)  {
    digitalWrite(ledPin3, LOW);
    value3 = 0;
  }
 
// Set ledPin according to the request
//digitalWrite(ledPin, value);
 
  
  client.print("Led is now: ");
 
  if(value3 == 1) {
    client.print("On");
  } else {
    client.print("Off");
  }
  client.println("<br><br>");
  client.println("<a href=\"/LED3=ON\"\"><button>On </button></a>");
  client.println("<a href=\"/LED3=OFF\"\"><button>Off </button></a><br />"); 
  client.println("</html>");
 
 
  delay(1);
  Serial.println("Client disonnected");
  Serial.println("");
  
 }
 else if(Mode == 0)
  if (results.value == 70385940842569) 
   {
    digitalWrite(ledPin,HIGH);
    }
  if (results.value == 70385940875465)
   {
    digitalWrite(ledPin,LOW);
    }
  if (results.value == 70385940834345) 
   {
    digitalWrite(ledPin1,HIGH);
    }
  if (results.value == 70385940867241) 
   {
    digitalWrite(ledPin1,LOW);
    }
  if (results.value == 70385940850793) 
   {
    digitalWrite(ledPin2,HIGH);
    }
  if (results.value == 70385940883689)
   {
    digitalWrite(ledPin2,LOW);
    }
  if (results.value == 70385940843597) 
   {
    digitalWrite(ledPin3,HIGH);
    }
  if (results.value == 70385940865185)
   {
    digitalWrite(ledPin3,LOW);
    }
 
 
  delay(100);
}
